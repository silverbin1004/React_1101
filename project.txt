## **상태(state)란 무엇인가요?**
-> 컴포넌트가 자체적으로 관리하는 데이터이다. 상태를 통해 사용자와의 상호작용에 반응할 수 있다.

## **속성(props)의 주요 용도는 무엇인가요?**
-> 속성은 컴포넌트간의 데이터 전달을 위한 매개체로 사용된다.

## **React에서 상태(state)를 선언할 때 사용하는 훅은 무엇인가요?**
-> useState

## **부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달할 때 사용하는 것은 무엇인가요?**
-> props

## **상태(state)를 업데이트하는 함수는 무엇이라고 하나요?**
-> setState

## **속성(props)은 변경 가능한가요?**
-> 속성은 부모 컴포넌트에서 전달되며, 자식 컴포넌트에서는 읽기 전용이다.

## **함수형 컴포넌트에서 상태(state)를 선언하려면 어떤 함수를 사용해야 하나요?**
-> useState

## **React에서 단방향 데이터 흐름이란 무엇을 의미하나요?**
->  상위 부모 컴포넌트에서 하위 자식 컴포넌트로 props를 통해 전달이 되며 반대로는 전달할 수 없다.

## **상태(state)와 속성(props)의 가장 큰 차이점은 무엇인가요?**
-> 상태는 컴포넌트 내에서 변경이 가능하지만 속성은 읽기 전용으로 컴포넌트 내에서는 변경이 불가능하다. 
또한 상태는 컴포넌트의 동적인 데이터를 관리하는 데 사용되며, 속성은 컴포넌트 간에 데이터를 전달하고 컴포넌트의 동작을 제어하는 . 데사용된다.

## **컴포넌트가 다시 렌더링되는 주요 원인은 무엇인가요?**
-> 상태나 속성이 변경되면 컴포넌트는 자동으로 다시 렌더링된다.

## **상태(state)를 변경할 때 직접 수정해도 되나요?**
-> 상태 업데이트 함수(setState)를 사용하여 수정하여야 한다.

## **속성(props)을 통해 전달된 데이터를 자식 컴포넌트에서 수정할 수 있나요?**
-> 속성은 읽기 전용이기 때문에 자식 컴포넌트에서 데이터를 수정할 수 없다.

### **상태(state)와 속성(props) 중 어떤 것이 컴포넌트 내부에서 관리되나요?**
-> 상태(state)가 컴포넌트 내부에서 관리되며 속성(props)는 부모 컴포넌트에서 자식 컴포넌트로 전달되는 읽기 전용 데이터로 컴포넌트 내부에서 직접 수정할 수 없고 부모 컴포넌트가 제어한다.

## **상태(state)의 초기값을 설정하는 방법은 무엇인가요?**
-> const [count, setCount] = useState(0);

## **부모 컴포넌트에서 자식 컴포넌트로 함수를 전달할 수 있나요?**
-> 특정 동작을 수행하는 기능을 제공하기 위해 부모 컴포넌트가 자식 컴포넌트로 함수를 전달 할 수 있다. 